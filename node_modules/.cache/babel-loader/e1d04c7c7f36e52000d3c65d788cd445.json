{"ast":null,"code":"import _slicedToArray from\"C:/Users/Sattyam Chauhan/Desktop/SattyamSingh/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Here we are using useContext Hook for implementing toggle mode in our application \nimport{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var themeContext=/*#__PURE__*/createContext();var initialState={darkMode:true};var themeReducer=function themeReducer(state,action){switch(action.type){case'toggle':return{darkMode:!state.darkMode};default:return state;}};export var ThemeProvider=function ThemeProvider(props){var _useReducer=useReducer(themeReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(themeContext.Provider,{value:{state:state,dispatch:dispatch},children:props.children});};","map":{"version":3,"sources":["C:/Users/Sattyam Chauhan/Desktop/SattyamSingh/src/Context.js"],"names":["createContext","useReducer","themeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":"mIAAA;AAEA,OAASA,aAAT,CAAwBC,UAAxB,KAA0C,OAA1C,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CAEP,GAAMG,CAAAA,YAAY,CAAE,CAACC,QAAQ,CAAE,IAAX,CAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAiB,CAClC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,QAAL,CACI,MAAQ,CAACJ,QAAQ,CAAE,CAACE,KAAK,CAACF,QAAlB,CAAR,CACJ,QACI,MAAOE,CAAAA,KAAP,CAJR,CAMH,CAPD,CAUA,MAAO,IAAMG,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,CAACC,KAAD,CAAS,CACjC,gBAAwBT,UAAU,CAACI,YAAD,CAAeF,YAAf,CAAlC,4CAAOG,KAAP,iBAAaK,QAAb,iBACA,mBACI,KAAC,YAAD,CAAc,QAAd,EAAwB,KAAK,CAAE,CAACL,KAAK,CAALA,KAAD,CAAOK,QAAQ,CAARA,QAAP,CAA/B,UACKD,KAAK,CAACE,QADX,EADJ,CAKH,CAPM","sourcesContent":["// Here we are using useContext Hook for implementing toggle mode in our application \r\n\r\nimport { createContext, useReducer } from \"react\";\r\n\r\nexport const themeContext = createContext();\r\n\r\nconst initialState ={darkMode: true};\r\n\r\nconst themeReducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'toggle':\r\n            return  {darkMode: !state.darkMode}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const ThemeProvider =(props)=>{\r\n    const [state,dispatch]= useReducer(themeReducer, initialState)\r\n    return(\r\n        <themeContext.Provider  value={{state,dispatch}}>\r\n            {props.children}\r\n        </themeContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}